{"remainingRequest":"D:\\webProject\\Epidemic-map\\node_modules\\babel-loader\\lib\\index.js!D:\\webProject\\Epidemic-map\\src\\utils\\request.js","dependencies":[{"path":"D:\\webProject\\Epidemic-map\\src\\utils\\request.js","mtime":1636814641633},{"path":"D:\\webProject\\Epidemic-map\\babel.config.js","mtime":1636814641626},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBxcyBmcm9tICJxdWVyeXN0cmluZyI7Cgp2YXIgZXJyb3JIYW5kbGUgPSBmdW5jdGlvbiBlcnJvckhhbmRsZShzdGF0dXMsIGluZm8pIHsKICBzd2l0Y2ggKHN0YXR1cykgewogICAgY2FzZSA0MDA6CiAgICAgIGNvbnNvbGUubG9nKCLmnI3liqHlmajmlLbliLDlrqLmiLfnq6/pgJrov4dQVVTmiJbogIVQT1NU6K+35rGC5o+Q5Lqk55qE6KGo56S677yM6KGo56S655qE5qC85byP5q2j56Gu77yM5L2G5pyN5Yqh5Zmo5LiN5oeC5a6D5LuA5LmI5oSP5oCdIik7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDAxOgogICAgICBjb25zb2xlLmxvZygi5a6i5oi356uv6K+V5Zu+5a+55LiA5Liq5Y+X5L+d5oqk55qE6LWE5rqQ6L+b6KGM5pON5L2c77yM5Y205Y+I5rKh5pyJ5o+Q5L6b5q2j56Gu55qE6K6k6K+B6K+B5LmmIik7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDAzOgogICAgICBjb25zb2xlLmxvZygi5a6i5oi356uv6K+35rGC55qE57uT5p6E5q2j56Gu77yM5L2G5piv5pyN5Yqh5Zmo5LiN5oOz5aSE55CG5a6DIik7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDA0OgogICAgICBjb25zb2xlLmxvZygi6LWE5rqQ6KKr5Zu05a6a5LmJKOe9kee7nOivt+axguWcsOWdgOmUmeivrykiKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSA1MDA6CiAgICAgIGNvbnNvbGUubG9nKCLmiafooYzor7fmsYLlpITnkIbku6PnoIHml7bpgYfliLDkuoblvILluLjvvIzlroPku6zlsLHlj5HpgIHmraTlk43lupTku6PnoIEiKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSA1MDM6CiAgICAgIGNvbnNvbGUubG9nKCLmnIDlj6/og73nmoTljp/lm6DmmK/otYTmupDkuI3otrPvvJrmnI3liqHlmajnqoHnhLbmlLbliLDlpKrlpJror7fmsYLvvIzku6Xoh7Pkuo7ml6Dms5Xlhajpg6jlpITnkIYiKTsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgY29uc29sZS5sb2coaW5mbyk7CiAgICAgIGJyZWFrOwogIH0KfTsgLy8g5Yib5bu6YXhpb3PnmoTlrp7kvovlr7nosaEKCgp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIHRpbWVvdXQ6IDUwMDAKfSk7IC8vIOWkhOeQhuW5tuWPkeivt+axguaWueazlQoKaW5zdGFuY2UuYWxsID0gYXhpb3MuYWxsOwppbnN0YW5jZS5zcHJlYWQgPSBheGlvcy5zcHJlYWQ7IC8vIOWFqOWxgOmFjee9rgovLyBpbnN0YW5jZS5kZWZhdWx0cy5iYXNlVVJMID0gImh0dHA6Ly9pd2Vud2lraS5jb20iOwoKaW5zdGFuY2UuZGVmYXVsdHMuaGVhZGVycy5wb3N0WyJDb250ZW50LVR5cGUiXSA9ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiOyAvLyDor7fmsYLmi6bmiKrlkozlk43lupTmi6bmiKoKCmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgaWYgKGNvbmZpZy5tZXRob2QgPT09ICJwb3N0IikgewogICAgY29uZmlnLmRhdGEgPSBxcy5zdHJpbmdpZnkoY29uZmlnLmRhdGEpOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgLy8g5Li65LuA5LmI6L+Z6YeM6KaB55SoUHJvbWlzZei/lOWbngpmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzID09PSAyMDAgPyBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpIDogUHJvbWlzZS5yZWplY3QocmVzcG9uc2UpOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICB2YXIgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZTsKCiAgaWYgKHJlc3BvbnNlKSB7CiAgICAvKioNCiAgICAgKiDplJnor6/kv6Hmga/ku6XnirbmgIHnoIHkuLrkuLsNCiAgICAgKi8KICAgIGVycm9ySGFuZGxlKHJlc3BvbnNlLnN0YXR1cywgcmVzcG9uc2UuZGF0YSk7CiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzcG9uc2UpOwogIH0gZWxzZSB7CiAgICBjb25zb2xlLmxvZygi6K+35rGC6KKr5Lit5patIik7CiAgfQp9KTsKLyoqDQogKiDmj5DkvptnZXTlkoxwb3N055qE6K+35rGC5pa55byPDQogKi8KCmV4cG9ydCBmdW5jdGlvbiBnZXQodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgaW5zdGFuY2UuZ2V0KHVybCwgewogICAgICBwYXJhbXM6IHBhcmFtcwogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyLmRhdGEpOwogICAgfSk7CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHBvc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgaW5zdGFuY2UucG9zdCh1cmwsIHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyLmRhdGEpOwogICAgfSk7CiAgfSk7Cn0KZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7"},{"version":3,"sources":["D:/webProject/Epidemic-map/src/utils/request.js"],"names":["axios","qs","errorHandle","status","info","console","log","instance","create","timeout","all","spread","defaults","headers","post","interceptors","request","use","config","method","data","stringify","error","Promise","reject","response","resolve","get","url","params","then","res","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,aAAf;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,IAAT,EAAkB;AACpC,UAAQD,MAAR;AACE,SAAK,GAAL;AACEE,MAAAA,OAAO,CAACC,GAAR,CACE,gDADF;AAGA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,GAAR,CACE,kCADF;AAGA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,GAAR,CACE,mCADF;AAGA;;AACF;AACED,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;AA3BJ;AA6BD,CA9BD,C,CAgCA;;;AACA,IAAMG,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB,C,CAIA;;AACAF,QAAQ,CAACG,GAAT,GAAeV,KAAK,CAACU,GAArB;AACAH,QAAQ,CAACI,MAAT,GAAkBX,KAAK,CAACW,MAAxB,C,CAEA;AACA;;AACAJ,QAAQ,CAACK,QAAT,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+B,cAA/B,IACE,mCADF,C,CAGA;;AACAP,QAAQ,CAACQ,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAACC,MAAD,EAAY;AACV,MAAIA,MAAM,CAACC,MAAP,KAAkB,MAAtB,EAA8B;AAC5BD,IAAAA,MAAM,CAACE,IAAP,GAAcnB,EAAE,CAACoB,SAAH,CAAaH,MAAM,CAACE,IAApB,CAAd;AACD;;AACD,SAAOF,MAAP;AACD,CANH,EAOE;AACA,UAACI,KAAD;AAAA,SAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAX;AAAA,CARF;AAWAf,QAAQ,CAACQ,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CACE,UAACQ,QAAD;AAAA,SACEA,QAAQ,CAACtB,MAAT,KAAoB,GAApB,GACIoB,OAAO,CAACG,OAAR,CAAgBD,QAAhB,CADJ,GAEIF,OAAO,CAACC,MAAR,CAAeC,QAAf,CAHN;AAAA,CADF,EAKE,UAACH,KAAD,EAAW;AACT,MAAQG,QAAR,GAAqBH,KAArB,CAAQG,QAAR;;AACA,MAAIA,QAAJ,EAAc;AACZ;AACN;AACA;AACMvB,IAAAA,WAAW,CAACuB,QAAQ,CAACtB,MAAV,EAAkBsB,QAAQ,CAACL,IAA3B,CAAX;AACA,WAAOG,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACD,GAND,MAMO;AACLpB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,CAhBH;AAmBA;AACA;AACA;;AAEA,OAAO,SAASqB,GAAT,CAAaC,GAAb,EAAkBC,MAAlB,EAA0B;AAC/B,SAAO,IAAIN,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AACtCjB,IAAAA,QAAQ,CACLoB,GADH,CACOC,GADP,EACY;AACRC,MAAAA,MAAM,EAANA;AADQ,KADZ,EAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;AACbL,MAAAA,OAAO,CAACK,GAAG,CAACX,IAAL,CAAP;AACD,KANH,WAOS,UAACY,GAAD,EAAS;AACdR,MAAAA,MAAM,CAACQ,GAAG,CAACZ,IAAL,CAAN;AACD,KATH;AAUD,GAXM,CAAP;AAYD;AAED,OAAO,SAASN,IAAT,CAAcc,GAAd,EAAmBC,MAAnB,EAA2B;AAChC,SAAO,IAAIN,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AACtCjB,IAAAA,QAAQ,CACLO,IADH,CACQc,GADR,EACaC,MADb,EAEGC,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbL,MAAAA,OAAO,CAACK,GAAG,CAACX,IAAL,CAAP;AACD,KAJH,WAKS,UAACY,GAAD,EAAS;AACdR,MAAAA,MAAM,CAACQ,GAAG,CAACZ,IAAL,CAAN;AACD,KAPH;AAQD,GATM,CAAP;AAUD;AAED,eAAeb,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport qs from \"querystring\";\r\n\r\nconst errorHandle = (status, info) => {\r\n  switch (status) {\r\n    case 400:\r\n      console.log(\r\n        \"服务器收到客户端通过PUT或者POST请求提交的表示，表示的格式正确，但服务器不懂它什么意思\"\r\n      );\r\n      break;\r\n    case 401:\r\n      console.log(\r\n        \"客户端试图对一个受保护的资源进行操作，却又没有提供正确的认证证书\"\r\n      );\r\n      break;\r\n    case 403:\r\n      console.log(\"客户端请求的结构正确，但是服务器不想处理它\");\r\n      break;\r\n    case 404:\r\n      console.log(\"资源被围定义(网络请求地址错误)\");\r\n      break;\r\n    case 500:\r\n      console.log(\"执行请求处理代码时遇到了异常，它们就发送此响应代码\");\r\n      break;\r\n    case 503:\r\n      console.log(\r\n        \"最可能的原因是资源不足：服务器突然收到太多请求，以至于无法全部处理\"\r\n      );\r\n      break;\r\n    default:\r\n      console.log(info);\r\n      break;\r\n  }\r\n};\r\n\r\n// 创建axios的实例对象\r\nconst instance = axios.create({\r\n  timeout: 5000,\r\n});\r\n\r\n// 处理并发请求方法\r\ninstance.all = axios.all;\r\ninstance.spread = axios.spread;\r\n\r\n// 全局配置\r\n// instance.defaults.baseURL = \"http://iwenwiki.com\";\r\ninstance.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\n// 请求拦截和响应拦截\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    if (config.method === \"post\") {\r\n      config.data = qs.stringify(config.data);\r\n    }\r\n    return config;\r\n  },\r\n  // 为什么这里要用Promise返回\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (response) =>\r\n    response.status === 200\r\n      ? Promise.resolve(response)\r\n      : Promise.reject(response),\r\n  (error) => {\r\n    const { response } = error;\r\n    if (response) {\r\n      /**\r\n       * 错误信息以状态码为主\r\n       */\r\n      errorHandle(response.status, response.data);\r\n      return Promise.reject(response);\r\n    } else {\r\n      console.log(\"请求被中断\");\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * 提供get和post的请求方式\r\n */\r\n\r\nexport function get(url, params) {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .get(url, {\r\n        params,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\nexport function post(url, params) {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .post(url, params)\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\nexport default instance;\r\n"]}]}