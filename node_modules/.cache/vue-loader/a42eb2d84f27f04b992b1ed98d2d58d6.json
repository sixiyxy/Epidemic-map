{"remainingRequest":"D:\\webProject\\Epidemic-map\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webProject\\Epidemic-map\\src\\components\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webProject\\Epidemic-map\\src\\components\\Map.vue","mtime":1637032553800},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIk1hcCIsDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGNpdHlNYXBEYXRhOiBbXQ0KICAgICAgICB9Ow0KICAgIH0sDQogICAgbW91bnRlZCgpIHsNCiAgICAgICAgLy90aGlzLiRjaGFydHMuY2hpbmFNYXAoImNoaW5hTWFwIikNCiAgICAgICAgZnVuY3Rpb24gZ2V0RGF0YSgpIHsNCiAgICAgICAgICAgICQuYWpheCh7DQogICAgICAgICAgICAgICAgdXJsOiAiaHR0cHM6Ly92aWV3LmluZXdzLnFxLmNvbS9nMi9nZXRPbnNJbmZvP25hbWU9ZGlzZWFzZV9oNSIsDQogICAgICAgICAgICAgICAgZGF0YVR5cGU6ICJqc29ucCIsDQogICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHsNCiAgICAgICAgICAgICAgICAvLyAgY29uc29sZS5sb2coZGF0YS5kYXRhKQ0KICAgICAgICAgICAgICAgIHZhciByZXMgPSBkYXRhLmRhdGEgfHwgIiI7DQogICAgICAgICAgICAgICAgcmVzID0gSlNPTi5wYXJzZShyZXMpOw0KICAgICAgICAgICAgICAgIHZhciBuZXdBcnIgPSBbXTsNCiAgICAgICAgICAgIC8vbmV3QXJy55qE5pWw5o2u5qC85byP5Li677yaDQogICAgICAgICAgICAvLyBbew0KICAgICAgICAgICAgLy8gICBuYW1lOiAn5YyX5LqsMTEnLA0KICAgICAgICAgICAgLy8gICB2YWx1ZTogMjEyDQogICAgICAgICAgICAvLyB9LCB7DQogICAgICAgICAgICAvLyAgIG5hbWU6ICflpKnmtKUnLA0KICAgICAgICAgICAgLy8gICB2YWx1ZTogNjANCiAgICAgICAgICAgIC8vIH1dDQogICAgICAgICAgICBpZiAocmVzKSB7DQogICAgICAgICAgICAgICAgLy/ojrflj5bliLDlkITkuKrnnIHku73nmoTmlbDmja4NCiAgICAgICAgICAgICAgICB2YXIgcHJvdmluY2UgPSByZXMuYXJlYVRyZWVbMF0uY2hpbGRyZW47DQogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm92aW5jZS5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgIHZhciBqc29uID0gew0KICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm92aW5jZVtpXS5uYW1lLA0KICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcHJvdmluY2VbaV0udG90YWwuY29uZmlybQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBuZXdBcnIucHVzaChqc29uKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhuZXdBcnIpDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkobmV3QXJyKSkNCiAgICAgICAgICAgICAgICAvL+S9v+eUqOaMh+WumueahOmFjee9rumhueWSjOaVsOaNruaYvuekuuWbvuihqA0KICAgICAgICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHsNCiAgICAgICAgICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBuYW1lOiAn56Gu6K+K5pWwJywNCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ21hcCcsDQogICAgICAgICAgICAgICAgICAgIG1hcFR5cGU6ICdjaGluYScsDQogICAgICAgICAgICAgICAgICAgIHJvYW06IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiKDI0OSwgMjQ5LCAyNDkpJw0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICBkYXRhOiBuZXdBcnINCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICB9KSAgICANCiAgICAgICAgfQ0KICAgICAgICBnZXREYXRhKCk7DQogICAgICAgIC8vIHRoaXMuJGFwaS5nZXRDYXNlTnVtKHsNCiAgICAgICAgLy8gICAgICAgICBrZXk6ICJkN2MzMzVmMmU3ODU2ZWM0OGMxOTYyYTk5ZmNjNmY5OCINCiAgICAgICAgLy8gICAgIH0pDQogICAgICAgIC8vICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAvLyAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzLm5ld3NsaXN0Lmxlbmd0aDsgaSsrKSB7DQogICAgICAgIC8vICAgICAgICAgICAgIHZhciB0ZW1wID0gew0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgbmFtZTogcmVzLm5ld3NsaXN0W2ldLnByb3ZpbmNlU2hvcnROYW1lLA0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgdmFsdWU6IHJlcy5uZXdzbGlzdFtpXS5jdXJyZW50Q29uZmlybWVkQ291bnQsDQogICAgICAgIC8vICAgICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBub3JtYWw6IHsNCiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgYXJlYUNvbG9yOiB0aGlzLnNldENvbG9yKA0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLm5ld3NsaXN0W2ldLmN1cnJlbnRDb25maXJtZWRDb3VudA0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICApDQogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAvLyAgICAgICAgICAgICB9Ow0KICAgICAgICAvLyAgICAgICAgICAgICB0aGlzLmNpdHlNYXBEYXRhLnB1c2godGVtcCk7DQogICAgICAgIC8vICAgICAgICAgfQ0KICAgICAgICAvLyAgICAgICAgIHRoaXMuJGNoYXJ0cy5jaGluYU1hcCgiY2hpbmFNYXAiLCB0aGlzLmNpdHlNYXBEYXRhKTsNCiAgICAgICAgLy8gICAgIH0pOw0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBzZXRDb2xvcih2YWx1ZSkgew0KICAgICAgICAgICAgbGV0IGN1cnJlbnRDb2xvciA9ICIiOw0KICAgICAgICAgICAgc3dpdGNoICh0cnVlKSB7DQogICAgICAgICAgICAgICAgY2FzZSB2YWx1ZSA9PSAwOg0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50Q29sb3IgPSAiI2ZmZiI7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIGNhc2UgdmFsdWUgPiAwICYmIHZhbHVlIDwgMTA6DQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDb2xvciA9ICIjRkRGRENGIjsNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgY2FzZSB2YWx1ZSA+PSAxMCAmJiB2YWx1ZSA8IDEwMDoNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudENvbG9yID0gIiNGRTlFODMiOw0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICBjYXNlIHZhbHVlID49IDEwMCAmJiB2YWx1ZSA8IDUwMDoNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudENvbG9yID0gIiNFNTVBNEUiOw0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICBjYXNlIHZhbHVlID49IDUwMCAmJiB2YWx1ZSA8IDEwMDAwOg0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50Q29sb3IgPSAiIzRGMDcwRCI7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRDb2xvcjsNCiAgICAgICAgfQ0KICAgIH0NCn07DQo="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <p class=\"title\">\r\n            <i></i> 疫情地图\r\n        </p>\r\n        <div id=\"chinaMap\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Map\",\r\n    data() {\r\n        return {\r\n            cityMapData: []\r\n        };\r\n    },\r\n    mounted() {\r\n        //this.$charts.chinaMap(\"chinaMap\")\r\n        function getData() {\r\n            $.ajax({\r\n                url: \"https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5\",\r\n                dataType: \"jsonp\",\r\n                success: function (data) {\r\n                //  console.log(data.data)\r\n                var res = data.data || \"\";\r\n                res = JSON.parse(res);\r\n                var newArr = [];\r\n            //newArr的数据格式为：\r\n            // [{\r\n            //   name: '北京11',\r\n            //   value: 212\r\n            // }, {\r\n            //   name: '天津',\r\n            //   value: 60\r\n            // }]\r\n            if (res) {\r\n                //获取到各个省份的数据\r\n                var province = res.areaTree[0].children;\r\n                for (var i = 0; i < province.length; i++) {\r\n                var json = {\r\n                    name: province[i].name,\r\n                    value: province[i].total.confirm\r\n                }\r\n                newArr.push(json)\r\n                }\r\n                console.log(newArr)\r\n                console.log(JSON.stringify(newArr))\r\n                //使用指定的配置项和数据显示图表\r\n                myChart.setOption({\r\n                series: [\r\n                    {\r\n                    name: '确诊数',\r\n                    type: 'map',\r\n                    mapType: 'china',\r\n                    roam: false,\r\n                    label: {\r\n                        show: true,\r\n                        color: 'rgb(249, 249, 249)'\r\n                    },\r\n                    data: newArr\r\n                    }\r\n                ]\r\n                });\r\n            }\r\n            }\r\n\r\n        })    \r\n        }\r\n        getData();\r\n        // this.$api.getCaseNum({\r\n        //         key: \"d7c335f2e7856ec48c1962a99fcc6f98\"\r\n        //     })\r\n        //     .then(res => {\r\n        //         for (var i = 0; i < res.newslist.length; i++) {\r\n        //             var temp = {\r\n        //                 name: res.newslist[i].provinceShortName,\r\n        //                 value: res.newslist[i].currentConfirmedCount,\r\n        //                 itemStyle: {\r\n        //                     normal: {\r\n        //                         areaColor: this.setColor(\r\n        //                             res.newslist[i].currentConfirmedCount\r\n        //                         )\r\n        //                     }\r\n        //                 }\r\n        //             };\r\n        //             this.cityMapData.push(temp);\r\n        //         }\r\n        //         this.$charts.chinaMap(\"chinaMap\", this.cityMapData);\r\n        //     });\r\n    },\r\n    methods: {\r\n        setColor(value) {\r\n            let currentColor = \"\";\r\n            switch (true) {\r\n                case value == 0:\r\n                    currentColor = \"#fff\";\r\n                    break;\r\n                case value > 0 && value < 10:\r\n                    currentColor = \"#FDFDCF\";\r\n                    break;\r\n                case value >= 10 && value < 100:\r\n                    currentColor = \"#FE9E83\";\r\n                    break;\r\n                case value >= 100 && value < 500:\r\n                    currentColor = \"#E55A4E\";\r\n                    break;\r\n                case value >= 500 && value < 10000:\r\n                    currentColor = \"#4F070D\";\r\n                    break;\r\n            }\r\n            return currentColor;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#chinaMap {\r\n    width: 100%;\r\n    height: 400px;\r\n}\r\n.title {\r\n    border-top: 0.005rem solid #ebebeb;\r\n    border-bottom: 0;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    -webkit-box-pack: start;\r\n    -ms-flex-pack: start;\r\n    justify-content: flex-start;\r\n    height: 0.44rem;\r\n    padding: 0 0.16rem;\r\n    font-weight: 500;\r\n    font-size: 0.17rem;\r\n    line-height: 0.44rem;\r\n    background: #fff;\r\n}\r\n.title::before{\r\n    content:\"\";\r\n    width: 5px;\r\n    height: 20px;\r\n    background: #4169e2;\r\n    margin-right: 10px;\r\n}\r\n</style>"]}]}