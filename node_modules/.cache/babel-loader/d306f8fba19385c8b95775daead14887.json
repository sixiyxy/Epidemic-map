{"remainingRequest":"D:\\webProject\\Epidemic-map\\node_modules\\babel-loader\\lib\\index.js!D:\\webProject\\Epidemic-map\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\webProject\\Epidemic-map\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webProject\\Epidemic-map\\src\\components\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webProject\\Epidemic-map\\src\\components\\Map.vue","mtime":1637032553800},{"path":"D:\\webProject\\Epidemic-map\\babel.config.js","mtime":1636814641626},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\Epidemic-map\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNYXAiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaXR5TWFwRGF0YTogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy90aGlzLiRjaGFydHMuY2hpbmFNYXAoImNoaW5hTWFwIikKICAgIGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgICQuYWpheCh7CiAgICAgICAgdXJsOiAiaHR0cHM6Ly92aWV3LmluZXdzLnFxLmNvbS9nMi9nZXRPbnNJbmZvP25hbWU9ZGlzZWFzZV9oNSIsCiAgICAgICAgZGF0YVR5cGU6ICJqc29ucCIsCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gc3VjY2VzcyhkYXRhKSB7CiAgICAgICAgICAvLyAgY29uc29sZS5sb2coZGF0YS5kYXRhKQogICAgICAgICAgdmFyIHJlcyA9IGRhdGEuZGF0YSB8fCAiIjsKICAgICAgICAgIHJlcyA9IEpTT04ucGFyc2UocmVzKTsKICAgICAgICAgIHZhciBuZXdBcnIgPSBbXTsgLy9uZXdBcnLnmoTmlbDmja7moLzlvI/kuLrvvJoKICAgICAgICAgIC8vIFt7CiAgICAgICAgICAvLyAgIG5hbWU6ICfljJfkuqwxMScsCiAgICAgICAgICAvLyAgIHZhbHVlOiAyMTIKICAgICAgICAgIC8vIH0sIHsKICAgICAgICAgIC8vICAgbmFtZTogJ+Wkqea0pScsCiAgICAgICAgICAvLyAgIHZhbHVlOiA2MAogICAgICAgICAgLy8gfV0KCiAgICAgICAgICBpZiAocmVzKSB7CiAgICAgICAgICAgIC8v6I635Y+W5Yiw5ZCE5Liq55yB5Lu955qE5pWw5o2uCiAgICAgICAgICAgIHZhciBwcm92aW5jZSA9IHJlcy5hcmVhVHJlZVswXS5jaGlsZHJlbjsKCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvdmluY2UubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICB2YXIganNvbiA9IHsKICAgICAgICAgICAgICAgIG5hbWU6IHByb3ZpbmNlW2ldLm5hbWUsCiAgICAgICAgICAgICAgICB2YWx1ZTogcHJvdmluY2VbaV0udG90YWwuY29uZmlybQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgbmV3QXJyLnB1c2goanNvbik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnNvbGUubG9nKG5ld0Fycik7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG5ld0FycikpOyAvL+S9v+eUqOaMh+WumueahOmFjee9rumhueWSjOaVsOaNruaYvuekuuWbvuihqAoKICAgICAgICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgICAgIG5hbWU6ICfnoa7or4rmlbAnLAogICAgICAgICAgICAgICAgdHlwZTogJ21hcCcsCiAgICAgICAgICAgICAgICBtYXBUeXBlOiAnY2hpbmEnLAogICAgICAgICAgICAgICAgcm9hbTogZmFsc2UsCiAgICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyNDksIDI0OSwgMjQ5KScKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBkYXRhOiBuZXdBcnIKICAgICAgICAgICAgICB9XQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICAgIGdldERhdGEoKTsgLy8gdGhpcy4kYXBpLmdldENhc2VOdW0oewogICAgLy8gICAgICAgICBrZXk6ICJkN2MzMzVmMmU3ODU2ZWM0OGMxOTYyYTk5ZmNjNmY5OCIKICAgIC8vICAgICB9KQogICAgLy8gICAgIC50aGVuKHJlcyA9PiB7CiAgICAvLyAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzLm5ld3NsaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAvLyAgICAgICAgICAgICB2YXIgdGVtcCA9IHsKICAgIC8vICAgICAgICAgICAgICAgICBuYW1lOiByZXMubmV3c2xpc3RbaV0ucHJvdmluY2VTaG9ydE5hbWUsCiAgICAvLyAgICAgICAgICAgICAgICAgdmFsdWU6IHJlcy5uZXdzbGlzdFtpXS5jdXJyZW50Q29uZmlybWVkQ291bnQsCiAgICAvLyAgICAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAvLyAgICAgICAgICAgICAgICAgICAgIG5vcm1hbDogewogICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgYXJlYUNvbG9yOiB0aGlzLnNldENvbG9yKAogICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5uZXdzbGlzdFtpXS5jdXJyZW50Q29uZmlybWVkQ291bnQKICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgIC8vICAgICAgICAgICAgICAgICAgICAgfQogICAgLy8gICAgICAgICAgICAgICAgIH0KICAgIC8vICAgICAgICAgICAgIH07CiAgICAvLyAgICAgICAgICAgICB0aGlzLmNpdHlNYXBEYXRhLnB1c2godGVtcCk7CiAgICAvLyAgICAgICAgIH0KICAgIC8vICAgICAgICAgdGhpcy4kY2hhcnRzLmNoaW5hTWFwKCJjaGluYU1hcCIsIHRoaXMuY2l0eU1hcERhdGEpOwogICAgLy8gICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgc2V0Q29sb3I6IGZ1bmN0aW9uIHNldENvbG9yKHZhbHVlKSB7CiAgICAgIHZhciBjdXJyZW50Q29sb3IgPSAiIjsKCiAgICAgIHN3aXRjaCAodHJ1ZSkgewogICAgICAgIGNhc2UgdmFsdWUgPT0gMDoKICAgICAgICAgIGN1cnJlbnRDb2xvciA9ICIjZmZmIjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIHZhbHVlID4gMCAmJiB2YWx1ZSA8IDEwOgogICAgICAgICAgY3VycmVudENvbG9yID0gIiNGREZEQ0YiOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgdmFsdWUgPj0gMTAgJiYgdmFsdWUgPCAxMDA6CiAgICAgICAgICBjdXJyZW50Q29sb3IgPSAiI0ZFOUU4MyI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSB2YWx1ZSA+PSAxMDAgJiYgdmFsdWUgPCA1MDA6CiAgICAgICAgICBjdXJyZW50Q29sb3IgPSAiI0U1NUE0RSI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSB2YWx1ZSA+PSA1MDAgJiYgdmFsdWUgPCAxMDAwMDoKICAgICAgICAgIGN1cnJlbnRDb2xvciA9ICIjNEYwNzBEIjsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICByZXR1cm4gY3VycmVudENvbG9yOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA;AACA,aAAA,OAAA,GAAA;AACA,MAAA,CAAA,CAAA,IAAA,CAAA;AACA,QAAA,GAAA,EAAA,yDADA;AAEA,QAAA,QAAA,EAAA,OAFA;AAGA,QAAA,OAAA,EAAA,iBAAA,IAAA,EAAA;AACA;AACA,cAAA,GAAA,GAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,cAAA,MAAA,GAAA,EAAA,CAJA,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAA,GAAA,EAAA;AACA;AACA,gBAAA,QAAA,GAAA,GAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA;;AACA,iBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,IAAA,GAAA;AACA,gBAAA,IAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IADA;AAEA,gBAAA,KAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AAFA,eAAA;AAIA,cAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,EAXA,CAYA;;AACA,YAAA,OAAA,CAAA,SAAA,CAAA;AACA,cAAA,MAAA,EAAA,CACA;AACA,gBAAA,IAAA,EAAA,KADA;AAEA,gBAAA,IAAA,EAAA,KAFA;AAGA,gBAAA,OAAA,EAAA,OAHA;AAIA,gBAAA,IAAA,EAAA,KAJA;AAKA,gBAAA,KAAA,EAAA;AACA,kBAAA,IAAA,EAAA,IADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBALA;AASA,gBAAA,IAAA,EAAA;AATA,eADA;AADA,aAAA;AAeA;AACA;AA7CA,OAAA;AAgDA;;AACA,IAAA,OAAA,GApDA,CAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhFA;AAiFA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,KADA,EACA;AACA,UAAA,YAAA,GAAA,EAAA;;AACA,cAAA,IAAA;AACA,aAAA,KAAA,IAAA,CAAA;AACA,UAAA,YAAA,GAAA,MAAA;AACA;;AACA,aAAA,KAAA,GAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,KAAA,IAAA,EAAA,IAAA,KAAA,GAAA,GAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,KAAA,IAAA,GAAA,IAAA,KAAA,GAAA,GAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,KAAA,IAAA,GAAA,IAAA,KAAA,GAAA,KAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;AAfA;;AAiBA,aAAA,YAAA;AACA;AArBA;AAjFA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <p class=\"title\">\r\n            <i></i> 疫情地图\r\n        </p>\r\n        <div id=\"chinaMap\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Map\",\r\n    data() {\r\n        return {\r\n            cityMapData: []\r\n        };\r\n    },\r\n    mounted() {\r\n        //this.$charts.chinaMap(\"chinaMap\")\r\n        function getData() {\r\n            $.ajax({\r\n                url: \"https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5\",\r\n                dataType: \"jsonp\",\r\n                success: function (data) {\r\n                //  console.log(data.data)\r\n                var res = data.data || \"\";\r\n                res = JSON.parse(res);\r\n                var newArr = [];\r\n            //newArr的数据格式为：\r\n            // [{\r\n            //   name: '北京11',\r\n            //   value: 212\r\n            // }, {\r\n            //   name: '天津',\r\n            //   value: 60\r\n            // }]\r\n            if (res) {\r\n                //获取到各个省份的数据\r\n                var province = res.areaTree[0].children;\r\n                for (var i = 0; i < province.length; i++) {\r\n                var json = {\r\n                    name: province[i].name,\r\n                    value: province[i].total.confirm\r\n                }\r\n                newArr.push(json)\r\n                }\r\n                console.log(newArr)\r\n                console.log(JSON.stringify(newArr))\r\n                //使用指定的配置项和数据显示图表\r\n                myChart.setOption({\r\n                series: [\r\n                    {\r\n                    name: '确诊数',\r\n                    type: 'map',\r\n                    mapType: 'china',\r\n                    roam: false,\r\n                    label: {\r\n                        show: true,\r\n                        color: 'rgb(249, 249, 249)'\r\n                    },\r\n                    data: newArr\r\n                    }\r\n                ]\r\n                });\r\n            }\r\n            }\r\n\r\n        })    \r\n        }\r\n        getData();\r\n        // this.$api.getCaseNum({\r\n        //         key: \"d7c335f2e7856ec48c1962a99fcc6f98\"\r\n        //     })\r\n        //     .then(res => {\r\n        //         for (var i = 0; i < res.newslist.length; i++) {\r\n        //             var temp = {\r\n        //                 name: res.newslist[i].provinceShortName,\r\n        //                 value: res.newslist[i].currentConfirmedCount,\r\n        //                 itemStyle: {\r\n        //                     normal: {\r\n        //                         areaColor: this.setColor(\r\n        //                             res.newslist[i].currentConfirmedCount\r\n        //                         )\r\n        //                     }\r\n        //                 }\r\n        //             };\r\n        //             this.cityMapData.push(temp);\r\n        //         }\r\n        //         this.$charts.chinaMap(\"chinaMap\", this.cityMapData);\r\n        //     });\r\n    },\r\n    methods: {\r\n        setColor(value) {\r\n            let currentColor = \"\";\r\n            switch (true) {\r\n                case value == 0:\r\n                    currentColor = \"#fff\";\r\n                    break;\r\n                case value > 0 && value < 10:\r\n                    currentColor = \"#FDFDCF\";\r\n                    break;\r\n                case value >= 10 && value < 100:\r\n                    currentColor = \"#FE9E83\";\r\n                    break;\r\n                case value >= 100 && value < 500:\r\n                    currentColor = \"#E55A4E\";\r\n                    break;\r\n                case value >= 500 && value < 10000:\r\n                    currentColor = \"#4F070D\";\r\n                    break;\r\n            }\r\n            return currentColor;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#chinaMap {\r\n    width: 100%;\r\n    height: 400px;\r\n}\r\n.title {\r\n    border-top: 0.005rem solid #ebebeb;\r\n    border-bottom: 0;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    -webkit-box-pack: start;\r\n    -ms-flex-pack: start;\r\n    justify-content: flex-start;\r\n    height: 0.44rem;\r\n    padding: 0 0.16rem;\r\n    font-weight: 500;\r\n    font-size: 0.17rem;\r\n    line-height: 0.44rem;\r\n    background: #fff;\r\n}\r\n.title::before{\r\n    content:\"\";\r\n    width: 5px;\r\n    height: 20px;\r\n    background: #4169e2;\r\n    margin-right: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}